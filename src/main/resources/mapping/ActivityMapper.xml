<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.young.sys.badminton.dao.ActivityMapper">

    <resultMap id="BaseResultMap" type="com.young.sys.badminton.domain.Activity">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="club_id" property="clubId" jdbcType="INTEGER"/>
        <result column="activity_date" property="activityDate" jdbcType="VARCHAR"/>
        <result column="start_time" property="startTime" jdbcType="VARCHAR"/>
        <result column="end_time" property="endTime" jdbcType="VARCHAR"/>
        <result column="limit_member" property="limitMember" jdbcType="INTEGER"/>
        <result column="activity_address" property="activityAddress" jdbcType="VARCHAR"/>
        <result column="activity_memo" property="activityMemo" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
    </resultMap>

    <select id="selectAll" resultMap="BaseResultMap">
        select *
        from activity
        where status = 1
        order by id desc
    </select>

    <select id="selectByClubId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select *
        from activity
        where club_id = #{clubId}
        order by id desc
    </select>

    <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select *
        from activity
        where status = 1 and id = #{id}
    </select>

    <insert id="insert" parameterType="com.young.sys.badminton.domain.Activity">
        insert into activity (club_id, activity_date,
                              start_time, end_time, limit_member,
                              activity_address, activity_memo
        )
        values (#{clubId,jdbcType=INTEGER}, #{activityDate,jdbcType=VARCHAR},
                #{startTime,jdbcType=VARCHAR}, #{endTime,jdbcType=VARCHAR}, #{limitMember,jdbcType=INTEGER},
                #{activityAddress,jdbcType=VARCHAR}, #{activityMemo,jdbcType=VARCHAR}
        )
    </insert>

    <update id="update" parameterType="com.young.sys.badminton.domain.Activity">
        update activity
        <set>
            <if test="clubId != null">
                club_id = #{clubId,jdbcType=INTEGER},
            </if>
            <if test="activityDate != null">
                activity_date = #{activityDate,jdbcType=VARCHAR},
            </if>
            <if test="startTime != null">
                start_time = #{startTime,jdbcType=VARCHAR},
            </if>
            <if test="endTime != null">
                end_time = #{endTime,jdbcType=VARCHAR},
            </if>
            <if test="limitMember != null">
                limit_member = #{limitMember,jdbcType=INTEGER},
            </if>
            <if test="activityAddress != null">
                activity_address = #{activityAddress,jdbcType=VARCHAR},
            </if>
            <if test="activityMemo != null">
                activity_memo = #{activityMemo,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from activity
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <select id="selectAllThisWeek" resultMap="BaseResultMap">
        select *
        from activity
        where status = 1 and YEARWEEK(date_format(activity_date, '%Y-%m-%d')) >= YEARWEEK(now()) and activity_date >= date_format(now(), '%Y-%m-%d')
        order by activity_date asc, start_time asc, end_time asc
    </select>

    <select id="selectPast" resultMap="BaseResultMap">
        <![CDATA[
        select *
        from activity
        where status = 1 and activity_date < date_format(now(), '%Y-%m-%d')
        order by activity_date desc, start_time desc, end_time desc
        ]]>
    </select>

    <select id="selectMinePastActivity" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select *
        from activity
        where id in (select activity_id
                     from activity_apply_member
                     where user_id = #{userId})
        order by activity_date desc, start_time desc, end_time desc
    </select>

    <select id="selectMineApplyActivity" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select b.*
        from activity_apply_member a left join activity b on a.activity_id = b.id
        where
            concat(b.activity_date, ' ', b.start_time) > date_format(now(), '%Y-%m-%d %H:%i') and a.user_id = #{userId}
    </select>

    <delete id="deleteByClubId" parameterType="java.lang.Integer">
        delete from activity
        where club_id = #{clubId}
    </delete>
</mapper>